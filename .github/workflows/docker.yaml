name: Containers
on:
  pull_request:
  push:
    branches:
      - main

jobs:
  changes:
    name: Test changed files
    runs-on: ubuntu-latest
    outputs:
      variants: ${{ steps.filter.outputs.changes }}
    steps:
      - uses: actions/checkout@v2
      # cspell:disable-next-line
      - uses: dorny/paths-filter@v2
        id: filter
        with:
          list-files: ''
          filters: |
            dev: 'src/dev/**'
  build:
    name: 'Build images: ${{ matrix.variant }}'
    needs: changes
    if: needs.changes.outputs.variants != '[]'
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      max-parallel: 1
      matrix:
        variant: ${{ fromJSON(needs.changes.outputs.variants) }}
    env:
      SRC: src/${{ matrix.variant }}
      NAMESPACE: doitintl/docops/containers
    steps:
      - uses: actions/checkout@v2
      # cspell:disable-next-line
      # - uses: hadolint/hadolint-action@v1.5.0
      #   with:
      #     dockerfile: ${{ env.SRC }}/Dockerfile
      - uses: docker/metadata-action@v3
        id: meta
        with:
          images: ghcr.io/${{ env.NAMESPACE }}/${{ matrix.variant }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
      - uses: docker/login-action@v1
        if: github.event_name != 'pull_request'
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - uses: docker/build-push-action@v2
        with:
          context: ${{ env.SRC }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          secrets: GITHUB_TOKEN=${{ secrets.GITHUB_TOKEN }}
